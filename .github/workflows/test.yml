name: test

on:
  pull_request:
    branches:
      - master
      - release/1.x
    paths:
      - src/khoj/**
      - tests/**
      - '!tests/evals/**'
      - config/**
      - pyproject.toml
      - .pre-commit-config.yml
      - .github/workflows/test.yml
  push:
    branches:
      - master
      - release/1.x
    paths:
      - src/khoj/**
      - tests/**
      - '!tests/evals/**'
      - config/**
      - pyproject.toml
      - .pre-commit-config.yml
      - .github/workflows/test.yml

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    container: ubuntu:latest
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - '3.10'
          - '3.11'
          - '3.12'

    services:
      postgres:
        image: ankane/pgvector
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python_version }}
        run: uv python install ${{ matrix.python_version }}

      - name: ‚è¨Ô∏è Install Dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt update && apt install -y git libegl1 sqlite3 libsqlite3-dev libsqlite3-0 ffmpeg libsm6 libxext6

      - name: ‚¨áÔ∏è Install Postgres
        env:
          DEBIAN_FRONTEND: noninteractive
        run : |
          apt install -y postgresql postgresql-client && apt install -y postgresql-server-dev-16

      - name: ‚¨áÔ∏è Install Application
        env:
          UV_INDEX: "https://download.pytorch.org/whl/cpu"
          UV_INDEX_STRATEGY: "unsafe-best-match"
          CUDA_VISIBLE_DEVICES: ""
        run: sed -i 's/dynamic = \["version"\]/version = "0.0.0"/' pyproject.toml && uv sync --all-extras

      - name: üß™ Test Application
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: uv run pytest
        timeout-minutes: 10
